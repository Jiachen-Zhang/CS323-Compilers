Terminals unused in grammar

   ERROE_INT
   ERROR_FLOAT
   POUND
   QUOTE
   LITERAL
   INCLUDE


State 21 conflicts: 2 shift/reduce
State 25 conflicts: 2 shift/reduce
State 71 conflicts: 12 shift/reduce, 19 reduce/reduce
State 72 conflicts: 16 shift/reduce
State 107 conflicts: 16 shift/reduce
State 109 conflicts: 16 shift/reduce
State 111 conflicts: 12 shift/reduce
State 112 conflicts: 12 shift/reduce
State 113 conflicts: 12 shift/reduce
State 114 conflicts: 12 shift/reduce
State 115 conflicts: 16 shift/reduce
State 116 conflicts: 16 shift/reduce
State 117 conflicts: 16 shift/reduce
State 118 conflicts: 16 shift/reduce
State 119 conflicts: 16 shift/reduce
State 120 conflicts: 16 shift/reduce
State 121 conflicts: 16 shift/reduce
State 122 conflicts: 16 shift/reduce
State 130 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: ExtDefList

    2 ExtDefList: ExtDef ExtDefList
    3           | %empty

    4 ExtDef: Specifier ExtDecList SEMI
    5       | Specifier SEMI
    6       | Specifier FunDec CompSt

    7 ExtDecList: VarDec
    8           | VarDec COMMA ExtDecList

    9 Specifier: TYPE
   10          | StructSpecifier

   11 StructSpecifier: STRUCT ID LC DefList RC
   12                | STRUCT ID

   13 VarDec: ID
   14       | VarDec LB INT RB

   15 FunDec: ID LP VarList error
   16       | ID LP VarList RP
   17       | ID LP error
   18       | ID LP RP

   19 VarList: ParamDec COMMA VarList
   20        | ParamDec

   21 ParamDec: Specifier VarDec

   22 CompSt: LC DefList StmtList RC
   23       | LC DefList StmtList DefList error

   24 StmtList: Stmt StmtList
   25         | %empty

   26 Stmt: Exp SEMI
   27     | Exp error
   28     | CompSt
   29     | RETURN SEMI error
   30     | RETURN Exp error
   31     | RETURN Exp SEMI
   32     | IF LP Exp RP Stmt
   33     | IF LP Exp RP Stmt ELSE Stmt
   34     | WHILE LP Exp RP Stmt

   35 DefList: Def DefList
   36        | %empty

   37 Def: Specifier DecList SEMI
   38    | Specifier DecList error

   39 DecList: Dec
   40        | Dec COMMA DecList

   41 Dec: VarDec
   42    | VarDec ASSIGN Exp

   43 Exp: Exp ASSIGN Exp
   44    | Exp ERROR_LEXEME Exp
   45    | Exp AND Exp
   46    | Exp OR Exp
   47    | Exp LT Exp
   48    | Exp LE Exp
   49    | Exp GT Exp
   50    | Exp GE Exp
   51    | Exp NE Exp
   52    | Exp EQ Exp
   53    | Exp PLUS Exp
   54    | Exp MINUS Exp
   55    | Exp MUL Exp
   56    | Exp DIV Exp
   57    | LP Exp RP
   58    | MINUS Exp
   59    | MINUS Exp
   60    | NOT Exp
   61    | ID LP Args error
   62    | ID LP Args RP
   63    | ID LP error
   64    | ID LP RP
   65    | Exp LB Exp RB
   66    | Exp DOT ID
   67    | ID
   68    | INT
   69    | FLOAT
   70    | CHAR
   71    | ERROR_LEXEME

   72 Args: Exp COMMA Args
   73     | Exp


Terminals, with rules where they appear

$end (0) 0
error (256) 15 17 23 27 29 30 38 61 63
ERROE_INT (258)
ERROR_FLOAT (259)
ERROR_LEXEME (260) 44 71
INT (261) 14 68
CHAR (262) 70
FLOAT (263) 69
WHILE (264) 34
IF (265) 32 33
ELSE (266) 33
ID (267) 11 12 13 15 16 17 18 61 62 63 64 66 67
TYPE (268) 9
DOT (269) 66
COMMA (270) 8 19 40 72
ASSIGN (271) 42 43
STRUCT (272) 11 12
SEMI (273) 4 5 26 29 31 37
LP (274) 15 16 17 18 32 33 34 57 61 62 63 64
RP (275) 16 18 32 33 34 57 62 64
LC (276) 11 22 23
RC (277) 11 22
LB (278) 14 65
RB (279) 14 65
RETURN (280) 29 30 31
POUND (281)
QUOTE (282)
LITERAL (283)
INCLUDE (284)
PLUS (285) 53
MUL (286) 55
MINUS (287) 54 58 59
DIV (288) 56
NOT (289) 60
OR (290) 46
AND (291) 45
NE (292) 51
LT (293) 47
LE (294) 48
GT (295) 49
GE (296) 50
EQ (297) 52
UMINUS (298)


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
Program (45)
    on left: 1, on right: 0
ExtDefList (46)
    on left: 2 3, on right: 1 2
ExtDef (47)
    on left: 4 5 6, on right: 2
ExtDecList (48)
    on left: 7 8, on right: 4 8
Specifier (49)
    on left: 9 10, on right: 4 5 6 21 37 38
StructSpecifier (50)
    on left: 11 12, on right: 10
VarDec (51)
    on left: 13 14, on right: 7 8 14 21 41 42
FunDec (52)
    on left: 15 16 17 18, on right: 6
VarList (53)
    on left: 19 20, on right: 15 16 19
ParamDec (54)
    on left: 21, on right: 19 20
CompSt (55)
    on left: 22 23, on right: 6 28
StmtList (56)
    on left: 24 25, on right: 22 23 24
Stmt (57)
    on left: 26 27 28 29 30 31 32 33 34, on right: 24 32 33 34
DefList (58)
    on left: 35 36, on right: 11 22 23 35
Def (59)
    on left: 37 38, on right: 35
DecList (60)
    on left: 39 40, on right: 37 38 40
Dec (61)
    on left: 41 42, on right: 39 40
Exp (62)
    on left: 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
    61 62 63 64 65 66 67 68 69 70 71, on right: 26 27 30 31 32 33 34
    42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 65 66
    72 73
Args (63)
    on left: 72 73, on right: 61 62 72


State 0

    0 $accept: . Program $end

    TYPE    shift, and go to state 1
    STRUCT  shift, and go to state 2

    $default  reduce using rule 3 (ExtDefList)

    Program          go to state 3
    ExtDefList       go to state 4
    ExtDef           go to state 5
    Specifier        go to state 6
    StructSpecifier  go to state 7


State 1

    9 Specifier: TYPE .

    $default  reduce using rule 9 (Specifier)


State 2

   11 StructSpecifier: STRUCT . ID LC DefList RC
   12                | STRUCT . ID

    ID  shift, and go to state 8


State 3

    0 $accept: Program . $end

    $end  shift, and go to state 9


State 4

    1 Program: ExtDefList .

    $default  reduce using rule 1 (Program)


State 5

    2 ExtDefList: ExtDef . ExtDefList

    TYPE    shift, and go to state 1
    STRUCT  shift, and go to state 2

    $default  reduce using rule 3 (ExtDefList)

    ExtDefList       go to state 10
    ExtDef           go to state 5
    Specifier        go to state 6
    StructSpecifier  go to state 7


State 6

    4 ExtDef: Specifier . ExtDecList SEMI
    5       | Specifier . SEMI
    6       | Specifier . FunDec CompSt

    ID    shift, and go to state 11
    SEMI  shift, and go to state 12

    ExtDecList  go to state 13
    VarDec      go to state 14
    FunDec      go to state 15


State 7

   10 Specifier: StructSpecifier .

    $default  reduce using rule 10 (Specifier)


State 8

   11 StructSpecifier: STRUCT ID . LC DefList RC
   12                | STRUCT ID .

    LC  shift, and go to state 16

    $default  reduce using rule 12 (StructSpecifier)


State 9

    0 $accept: Program $end .

    $default  accept


State 10

    2 ExtDefList: ExtDef ExtDefList .

    $default  reduce using rule 2 (ExtDefList)


State 11

   13 VarDec: ID .
   15 FunDec: ID . LP VarList error
   16       | ID . LP VarList RP
   17       | ID . LP error
   18       | ID . LP RP

    LP  shift, and go to state 17

    $default  reduce using rule 13 (VarDec)


State 12

    5 ExtDef: Specifier SEMI .

    $default  reduce using rule 5 (ExtDef)


State 13

    4 ExtDef: Specifier ExtDecList . SEMI

    SEMI  shift, and go to state 18


State 14

    7 ExtDecList: VarDec .
    8           | VarDec . COMMA ExtDecList
   14 VarDec: VarDec . LB INT RB

    COMMA  shift, and go to state 19
    LB     shift, and go to state 20

    $default  reduce using rule 7 (ExtDecList)


State 15

    6 ExtDef: Specifier FunDec . CompSt

    LC  shift, and go to state 21

    CompSt  go to state 22


State 16

   11 StructSpecifier: STRUCT ID LC . DefList RC

    TYPE    shift, and go to state 1
    STRUCT  shift, and go to state 2

    $default  reduce using rule 36 (DefList)

    Specifier        go to state 23
    StructSpecifier  go to state 7
    DefList          go to state 24
    Def              go to state 25


State 17

   15 FunDec: ID LP . VarList error
   16       | ID LP . VarList RP
   17       | ID LP . error
   18       | ID LP . RP

    error   shift, and go to state 26
    TYPE    shift, and go to state 1
    STRUCT  shift, and go to state 2
    RP      shift, and go to state 27

    Specifier        go to state 28
    StructSpecifier  go to state 7
    VarList          go to state 29
    ParamDec         go to state 30


State 18

    4 ExtDef: Specifier ExtDecList SEMI .

    $default  reduce using rule 4 (ExtDef)


State 19

    8 ExtDecList: VarDec COMMA . ExtDecList

    ID  shift, and go to state 31

    ExtDecList  go to state 32
    VarDec      go to state 14


State 20

   14 VarDec: VarDec LB . INT RB

    INT  shift, and go to state 33


State 21

   22 CompSt: LC . DefList StmtList RC
   23       | LC . DefList StmtList DefList error

    TYPE    shift, and go to state 1
    STRUCT  shift, and go to state 2

    TYPE      [reduce using rule 36 (DefList)]
    STRUCT    [reduce using rule 36 (DefList)]
    $default  reduce using rule 36 (DefList)

    Specifier        go to state 23
    StructSpecifier  go to state 7
    DefList          go to state 34
    Def              go to state 25


State 22

    6 ExtDef: Specifier FunDec CompSt .

    $default  reduce using rule 6 (ExtDef)


State 23

   37 Def: Specifier . DecList SEMI
   38    | Specifier . DecList error

    ID  shift, and go to state 31

    VarDec   go to state 35
    DecList  go to state 36
    Dec      go to state 37


State 24

   11 StructSpecifier: STRUCT ID LC DefList . RC

    RC  shift, and go to state 38


State 25

   35 DefList: Def . DefList

    TYPE    shift, and go to state 1
    STRUCT  shift, and go to state 2

    TYPE      [reduce using rule 36 (DefList)]
    STRUCT    [reduce using rule 36 (DefList)]
    $default  reduce using rule 36 (DefList)

    Specifier        go to state 23
    StructSpecifier  go to state 7
    DefList          go to state 39
    Def              go to state 25


State 26

   17 FunDec: ID LP error .

    $default  reduce using rule 17 (FunDec)


State 27

   18 FunDec: ID LP RP .

    $default  reduce using rule 18 (FunDec)


State 28

   21 ParamDec: Specifier . VarDec

    ID  shift, and go to state 31

    VarDec  go to state 40


State 29

   15 FunDec: ID LP VarList . error
   16       | ID LP VarList . RP

    error  shift, and go to state 41
    RP     shift, and go to state 42


State 30

   19 VarList: ParamDec . COMMA VarList
   20        | ParamDec .

    COMMA  shift, and go to state 43

    $default  reduce using rule 20 (VarList)


State 31

   13 VarDec: ID .

    $default  reduce using rule 13 (VarDec)


State 32

    8 ExtDecList: VarDec COMMA ExtDecList .

    $default  reduce using rule 8 (ExtDecList)


State 33

   14 VarDec: VarDec LB INT . RB

    RB  shift, and go to state 44


State 34

   22 CompSt: LC DefList . StmtList RC
   23       | LC DefList . StmtList DefList error

    ERROR_LEXEME  shift, and go to state 45
    INT           shift, and go to state 46
    CHAR          shift, and go to state 47
    FLOAT         shift, and go to state 48
    WHILE         shift, and go to state 49
    IF            shift, and go to state 50
    ID            shift, and go to state 51
    LP            shift, and go to state 52
    LC            shift, and go to state 21
    RETURN        shift, and go to state 53
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55

    $default  reduce using rule 25 (StmtList)

    CompSt    go to state 56
    StmtList  go to state 57
    Stmt      go to state 58
    Exp       go to state 59


State 35

   14 VarDec: VarDec . LB INT RB
   41 Dec: VarDec .
   42    | VarDec . ASSIGN Exp

    ASSIGN  shift, and go to state 60
    LB      shift, and go to state 20

    $default  reduce using rule 41 (Dec)


State 36

   37 Def: Specifier DecList . SEMI
   38    | Specifier DecList . error

    error  shift, and go to state 61
    SEMI   shift, and go to state 62


State 37

   39 DecList: Dec .
   40        | Dec . COMMA DecList

    COMMA  shift, and go to state 63

    $default  reduce using rule 39 (DecList)


State 38

   11 StructSpecifier: STRUCT ID LC DefList RC .

    $default  reduce using rule 11 (StructSpecifier)


State 39

   35 DefList: Def DefList .

    $default  reduce using rule 35 (DefList)


State 40

   14 VarDec: VarDec . LB INT RB
   21 ParamDec: Specifier VarDec .

    LB  shift, and go to state 20

    $default  reduce using rule 21 (ParamDec)


State 41

   15 FunDec: ID LP VarList error .

    $default  reduce using rule 15 (FunDec)


State 42

   16 FunDec: ID LP VarList RP .

    $default  reduce using rule 16 (FunDec)


State 43

   19 VarList: ParamDec COMMA . VarList

    TYPE    shift, and go to state 1
    STRUCT  shift, and go to state 2

    Specifier        go to state 28
    StructSpecifier  go to state 7
    VarList          go to state 64
    ParamDec         go to state 30


State 44

   14 VarDec: VarDec LB INT RB .

    $default  reduce using rule 14 (VarDec)


State 45

   71 Exp: ERROR_LEXEME .

    $default  reduce using rule 71 (Exp)


State 46

   68 Exp: INT .

    $default  reduce using rule 68 (Exp)


State 47

   70 Exp: CHAR .

    $default  reduce using rule 70 (Exp)


State 48

   69 Exp: FLOAT .

    $default  reduce using rule 69 (Exp)


State 49

   34 Stmt: WHILE . LP Exp RP Stmt

    LP  shift, and go to state 65


State 50

   32 Stmt: IF . LP Exp RP Stmt
   33     | IF . LP Exp RP Stmt ELSE Stmt

    LP  shift, and go to state 66


State 51

   61 Exp: ID . LP Args error
   62    | ID . LP Args RP
   63    | ID . LP error
   64    | ID . LP RP
   67    | ID .

    LP  shift, and go to state 67

    $default  reduce using rule 67 (Exp)


State 52

   57 Exp: LP . Exp RP

    ERROR_LEXEME  shift, and go to state 45
    INT           shift, and go to state 46
    CHAR          shift, and go to state 47
    FLOAT         shift, and go to state 48
    ID            shift, and go to state 51
    LP            shift, and go to state 52
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55

    Exp  go to state 68


State 53

   29 Stmt: RETURN . SEMI error
   30     | RETURN . Exp error
   31     | RETURN . Exp SEMI

    ERROR_LEXEME  shift, and go to state 45
    INT           shift, and go to state 46
    CHAR          shift, and go to state 47
    FLOAT         shift, and go to state 48
    ID            shift, and go to state 51
    SEMI          shift, and go to state 69
    LP            shift, and go to state 52
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55

    Exp  go to state 70


State 54

   58 Exp: MINUS . Exp
   59    | MINUS . Exp

    ERROR_LEXEME  shift, and go to state 45
    INT           shift, and go to state 46
    CHAR          shift, and go to state 47
    FLOAT         shift, and go to state 48
    ID            shift, and go to state 51
    LP            shift, and go to state 52
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55

    Exp  go to state 71


State 55

   60 Exp: NOT . Exp

    ERROR_LEXEME  shift, and go to state 45
    INT           shift, and go to state 46
    CHAR          shift, and go to state 47
    FLOAT         shift, and go to state 48
    ID            shift, and go to state 51
    LP            shift, and go to state 52
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55

    Exp  go to state 72


State 56

   28 Stmt: CompSt .

    $default  reduce using rule 28 (Stmt)


State 57

   22 CompSt: LC DefList StmtList . RC
   23       | LC DefList StmtList . DefList error

    TYPE    shift, and go to state 1
    STRUCT  shift, and go to state 2
    RC      shift, and go to state 73

    $default  reduce using rule 36 (DefList)

    Specifier        go to state 23
    StructSpecifier  go to state 7
    DefList          go to state 74
    Def              go to state 25


State 58

   24 StmtList: Stmt . StmtList

    ERROR_LEXEME  shift, and go to state 45
    INT           shift, and go to state 46
    CHAR          shift, and go to state 47
    FLOAT         shift, and go to state 48
    WHILE         shift, and go to state 49
    IF            shift, and go to state 50
    ID            shift, and go to state 51
    LP            shift, and go to state 52
    LC            shift, and go to state 21
    RETURN        shift, and go to state 53
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55

    $default  reduce using rule 25 (StmtList)

    CompSt    go to state 56
    StmtList  go to state 75
    Stmt      go to state 58
    Exp       go to state 59


State 59

   26 Stmt: Exp . SEMI
   27     | Exp . error
   43 Exp: Exp . ASSIGN Exp
   44    | Exp . ERROR_LEXEME Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . LT Exp
   48    | Exp . LE Exp
   49    | Exp . GT Exp
   50    | Exp . GE Exp
   51    | Exp . NE Exp
   52    | Exp . EQ Exp
   53    | Exp . PLUS Exp
   54    | Exp . MINUS Exp
   55    | Exp . MUL Exp
   56    | Exp . DIV Exp
   65    | Exp . LB Exp RB
   66    | Exp . DOT ID

    error         shift, and go to state 76
    ERROR_LEXEME  shift, and go to state 77
    DOT           shift, and go to state 78
    ASSIGN        shift, and go to state 79
    SEMI          shift, and go to state 80
    LB            shift, and go to state 81
    PLUS          shift, and go to state 82
    MUL           shift, and go to state 83
    MINUS         shift, and go to state 84
    DIV           shift, and go to state 85
    OR            shift, and go to state 86
    AND           shift, and go to state 87
    NE            shift, and go to state 88
    LT            shift, and go to state 89
    LE            shift, and go to state 90
    GT            shift, and go to state 91
    GE            shift, and go to state 92
    EQ            shift, and go to state 93


State 60

   42 Dec: VarDec ASSIGN . Exp

    ERROR_LEXEME  shift, and go to state 45
    INT           shift, and go to state 46
    CHAR          shift, and go to state 47
    FLOAT         shift, and go to state 48
    ID            shift, and go to state 51
    LP            shift, and go to state 52
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55

    Exp  go to state 94


State 61

   38 Def: Specifier DecList error .

    $default  reduce using rule 38 (Def)


State 62

   37 Def: Specifier DecList SEMI .

    $default  reduce using rule 37 (Def)


State 63

   40 DecList: Dec COMMA . DecList

    ID  shift, and go to state 31

    VarDec   go to state 35
    DecList  go to state 95
    Dec      go to state 37


State 64

   19 VarList: ParamDec COMMA VarList .

    $default  reduce using rule 19 (VarList)


State 65

   34 Stmt: WHILE LP . Exp RP Stmt

    ERROR_LEXEME  shift, and go to state 45
    INT           shift, and go to state 46
    CHAR          shift, and go to state 47
    FLOAT         shift, and go to state 48
    ID            shift, and go to state 51
    LP            shift, and go to state 52
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55

    Exp  go to state 96


State 66

   32 Stmt: IF LP . Exp RP Stmt
   33     | IF LP . Exp RP Stmt ELSE Stmt

    ERROR_LEXEME  shift, and go to state 45
    INT           shift, and go to state 46
    CHAR          shift, and go to state 47
    FLOAT         shift, and go to state 48
    ID            shift, and go to state 51
    LP            shift, and go to state 52
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55

    Exp  go to state 97


State 67

   61 Exp: ID LP . Args error
   62    | ID LP . Args RP
   63    | ID LP . error
   64    | ID LP . RP

    error         shift, and go to state 98
    ERROR_LEXEME  shift, and go to state 45
    INT           shift, and go to state 46
    CHAR          shift, and go to state 47
    FLOAT         shift, and go to state 48
    ID            shift, and go to state 51
    LP            shift, and go to state 52
    RP            shift, and go to state 99
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55

    Exp   go to state 100
    Args  go to state 101


State 68

   43 Exp: Exp . ASSIGN Exp
   44    | Exp . ERROR_LEXEME Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . LT Exp
   48    | Exp . LE Exp
   49    | Exp . GT Exp
   50    | Exp . GE Exp
   51    | Exp . NE Exp
   52    | Exp . EQ Exp
   53    | Exp . PLUS Exp
   54    | Exp . MINUS Exp
   55    | Exp . MUL Exp
   56    | Exp . DIV Exp
   57    | LP Exp . RP
   65    | Exp . LB Exp RB
   66    | Exp . DOT ID

    ERROR_LEXEME  shift, and go to state 77
    DOT           shift, and go to state 78
    ASSIGN        shift, and go to state 79
    RP            shift, and go to state 102
    LB            shift, and go to state 81
    PLUS          shift, and go to state 82
    MUL           shift, and go to state 83
    MINUS         shift, and go to state 84
    DIV           shift, and go to state 85
    OR            shift, and go to state 86
    AND           shift, and go to state 87
    NE            shift, and go to state 88
    LT            shift, and go to state 89
    LE            shift, and go to state 90
    GT            shift, and go to state 91
    GE            shift, and go to state 92
    EQ            shift, and go to state 93


State 69

   29 Stmt: RETURN SEMI . error

    error  shift, and go to state 103


State 70

   30 Stmt: RETURN Exp . error
   31     | RETURN Exp . SEMI
   43 Exp: Exp . ASSIGN Exp
   44    | Exp . ERROR_LEXEME Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . LT Exp
   48    | Exp . LE Exp
   49    | Exp . GT Exp
   50    | Exp . GE Exp
   51    | Exp . NE Exp
   52    | Exp . EQ Exp
   53    | Exp . PLUS Exp
   54    | Exp . MINUS Exp
   55    | Exp . MUL Exp
   56    | Exp . DIV Exp
   65    | Exp . LB Exp RB
   66    | Exp . DOT ID

    error         shift, and go to state 104
    ERROR_LEXEME  shift, and go to state 77
    DOT           shift, and go to state 78
    ASSIGN        shift, and go to state 79
    SEMI          shift, and go to state 105
    LB            shift, and go to state 81
    PLUS          shift, and go to state 82
    MUL           shift, and go to state 83
    MINUS         shift, and go to state 84
    DIV           shift, and go to state 85
    OR            shift, and go to state 86
    AND           shift, and go to state 87
    NE            shift, and go to state 88
    LT            shift, and go to state 89
    LE            shift, and go to state 90
    GT            shift, and go to state 91
    GE            shift, and go to state 92
    EQ            shift, and go to state 93


State 71

   43 Exp: Exp . ASSIGN Exp
   44    | Exp . ERROR_LEXEME Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . LT Exp
   48    | Exp . LE Exp
   49    | Exp . GT Exp
   50    | Exp . GE Exp
   51    | Exp . NE Exp
   52    | Exp . EQ Exp
   53    | Exp . PLUS Exp
   54    | Exp . MINUS Exp
   55    | Exp . MUL Exp
   56    | Exp . DIV Exp
   58    | MINUS Exp .
   59    | MINUS Exp .
   65    | Exp . LB Exp RB
   66    | Exp . DOT ID

    ERROR_LEXEME  shift, and go to state 77
    DOT           shift, and go to state 78
    ASSIGN        shift, and go to state 79
    LB            shift, and go to state 81
    OR            shift, and go to state 86
    AND           shift, and go to state 87
    NE            shift, and go to state 88
    LT            shift, and go to state 89
    LE            shift, and go to state 90
    GT            shift, and go to state 91
    GE            shift, and go to state 92
    EQ            shift, and go to state 93

    error         reduce using rule 58 (Exp)
    error         [reduce using rule 59 (Exp)]
    ERROR_LEXEME  [reduce using rule 58 (Exp)]
    ERROR_LEXEME  [reduce using rule 59 (Exp)]
    DOT           [reduce using rule 58 (Exp)]
    DOT           [reduce using rule 59 (Exp)]
    COMMA         reduce using rule 58 (Exp)
    COMMA         [reduce using rule 59 (Exp)]
    ASSIGN        [reduce using rule 58 (Exp)]
    ASSIGN        [reduce using rule 59 (Exp)]
    SEMI          reduce using rule 58 (Exp)
    SEMI          [reduce using rule 59 (Exp)]
    RP            reduce using rule 58 (Exp)
    RP            [reduce using rule 59 (Exp)]
    LB            [reduce using rule 58 (Exp)]
    LB            [reduce using rule 59 (Exp)]
    RB            reduce using rule 58 (Exp)
    RB            [reduce using rule 59 (Exp)]
    PLUS          reduce using rule 58 (Exp)
    PLUS          [reduce using rule 59 (Exp)]
    MUL           reduce using rule 59 (Exp)
    MINUS         reduce using rule 58 (Exp)
    MINUS         [reduce using rule 59 (Exp)]
    DIV           reduce using rule 59 (Exp)
    OR            [reduce using rule 58 (Exp)]
    OR            [reduce using rule 59 (Exp)]
    AND           [reduce using rule 58 (Exp)]
    AND           [reduce using rule 59 (Exp)]
    NE            [reduce using rule 58 (Exp)]
    NE            [reduce using rule 59 (Exp)]
    LT            [reduce using rule 58 (Exp)]
    LT            [reduce using rule 59 (Exp)]
    LE            [reduce using rule 58 (Exp)]
    LE            [reduce using rule 59 (Exp)]
    GT            [reduce using rule 58 (Exp)]
    GT            [reduce using rule 59 (Exp)]
    GE            [reduce using rule 58 (Exp)]
    GE            [reduce using rule 59 (Exp)]
    EQ            [reduce using rule 58 (Exp)]
    EQ            [reduce using rule 59 (Exp)]
    $default      reduce using rule 58 (Exp)


State 72

   43 Exp: Exp . ASSIGN Exp
   44    | Exp . ERROR_LEXEME Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . LT Exp
   48    | Exp . LE Exp
   49    | Exp . GT Exp
   50    | Exp . GE Exp
   51    | Exp . NE Exp
   52    | Exp . EQ Exp
   53    | Exp . PLUS Exp
   54    | Exp . MINUS Exp
   55    | Exp . MUL Exp
   56    | Exp . DIV Exp
   60    | NOT Exp .
   65    | Exp . LB Exp RB
   66    | Exp . DOT ID

    ERROR_LEXEME  shift, and go to state 77
    DOT           shift, and go to state 78
    ASSIGN        shift, and go to state 79
    LB            shift, and go to state 81
    PLUS          shift, and go to state 82
    MUL           shift, and go to state 83
    MINUS         shift, and go to state 84
    DIV           shift, and go to state 85
    OR            shift, and go to state 86
    AND           shift, and go to state 87
    NE            shift, and go to state 88
    LT            shift, and go to state 89
    LE            shift, and go to state 90
    GT            shift, and go to state 91
    GE            shift, and go to state 92
    EQ            shift, and go to state 93

    ERROR_LEXEME  [reduce using rule 60 (Exp)]
    DOT           [reduce using rule 60 (Exp)]
    ASSIGN        [reduce using rule 60 (Exp)]
    LB            [reduce using rule 60 (Exp)]
    PLUS          [reduce using rule 60 (Exp)]
    MUL           [reduce using rule 60 (Exp)]
    MINUS         [reduce using rule 60 (Exp)]
    DIV           [reduce using rule 60 (Exp)]
    OR            [reduce using rule 60 (Exp)]
    AND           [reduce using rule 60 (Exp)]
    NE            [reduce using rule 60 (Exp)]
    LT            [reduce using rule 60 (Exp)]
    LE            [reduce using rule 60 (Exp)]
    GT            [reduce using rule 60 (Exp)]
    GE            [reduce using rule 60 (Exp)]
    EQ            [reduce using rule 60 (Exp)]
    $default      reduce using rule 60 (Exp)


State 73

   22 CompSt: LC DefList StmtList RC .

    $default  reduce using rule 22 (CompSt)


State 74

   23 CompSt: LC DefList StmtList DefList . error

    error  shift, and go to state 106


State 75

   24 StmtList: Stmt StmtList .

    $default  reduce using rule 24 (StmtList)


State 76

   27 Stmt: Exp error .

    $default  reduce using rule 27 (Stmt)


State 77

   44 Exp: Exp ERROR_LEXEME . Exp

    ERROR_LEXEME  shift, and go to state 45
    INT           shift, and go to state 46
    CHAR          shift, and go to state 47
    FLOAT         shift, and go to state 48
    ID            shift, and go to state 51
    LP            shift, and go to state 52
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55

    Exp  go to state 107


State 78

   66 Exp: Exp DOT . ID

    ID  shift, and go to state 108


State 79

   43 Exp: Exp ASSIGN . Exp

    ERROR_LEXEME  shift, and go to state 45
    INT           shift, and go to state 46
    CHAR          shift, and go to state 47
    FLOAT         shift, and go to state 48
    ID            shift, and go to state 51
    LP            shift, and go to state 52
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55

    Exp  go to state 109


State 80

   26 Stmt: Exp SEMI .

    $default  reduce using rule 26 (Stmt)


State 81

   65 Exp: Exp LB . Exp RB

    ERROR_LEXEME  shift, and go to state 45
    INT           shift, and go to state 46
    CHAR          shift, and go to state 47
    FLOAT         shift, and go to state 48
    ID            shift, and go to state 51
    LP            shift, and go to state 52
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55

    Exp  go to state 110


State 82

   53 Exp: Exp PLUS . Exp

    ERROR_LEXEME  shift, and go to state 45
    INT           shift, and go to state 46
    CHAR          shift, and go to state 47
    FLOAT         shift, and go to state 48
    ID            shift, and go to state 51
    LP            shift, and go to state 52
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55

    Exp  go to state 111


State 83

   55 Exp: Exp MUL . Exp

    ERROR_LEXEME  shift, and go to state 45
    INT           shift, and go to state 46
    CHAR          shift, and go to state 47
    FLOAT         shift, and go to state 48
    ID            shift, and go to state 51
    LP            shift, and go to state 52
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55

    Exp  go to state 112


State 84

   54 Exp: Exp MINUS . Exp

    ERROR_LEXEME  shift, and go to state 45
    INT           shift, and go to state 46
    CHAR          shift, and go to state 47
    FLOAT         shift, and go to state 48
    ID            shift, and go to state 51
    LP            shift, and go to state 52
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55

    Exp  go to state 113


State 85

   56 Exp: Exp DIV . Exp

    ERROR_LEXEME  shift, and go to state 45
    INT           shift, and go to state 46
    CHAR          shift, and go to state 47
    FLOAT         shift, and go to state 48
    ID            shift, and go to state 51
    LP            shift, and go to state 52
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55

    Exp  go to state 114


State 86

   46 Exp: Exp OR . Exp

    ERROR_LEXEME  shift, and go to state 45
    INT           shift, and go to state 46
    CHAR          shift, and go to state 47
    FLOAT         shift, and go to state 48
    ID            shift, and go to state 51
    LP            shift, and go to state 52
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55

    Exp  go to state 115


State 87

   45 Exp: Exp AND . Exp

    ERROR_LEXEME  shift, and go to state 45
    INT           shift, and go to state 46
    CHAR          shift, and go to state 47
    FLOAT         shift, and go to state 48
    ID            shift, and go to state 51
    LP            shift, and go to state 52
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55

    Exp  go to state 116


State 88

   51 Exp: Exp NE . Exp

    ERROR_LEXEME  shift, and go to state 45
    INT           shift, and go to state 46
    CHAR          shift, and go to state 47
    FLOAT         shift, and go to state 48
    ID            shift, and go to state 51
    LP            shift, and go to state 52
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55

    Exp  go to state 117


State 89

   47 Exp: Exp LT . Exp

    ERROR_LEXEME  shift, and go to state 45
    INT           shift, and go to state 46
    CHAR          shift, and go to state 47
    FLOAT         shift, and go to state 48
    ID            shift, and go to state 51
    LP            shift, and go to state 52
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55

    Exp  go to state 118


State 90

   48 Exp: Exp LE . Exp

    ERROR_LEXEME  shift, and go to state 45
    INT           shift, and go to state 46
    CHAR          shift, and go to state 47
    FLOAT         shift, and go to state 48
    ID            shift, and go to state 51
    LP            shift, and go to state 52
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55

    Exp  go to state 119


State 91

   49 Exp: Exp GT . Exp

    ERROR_LEXEME  shift, and go to state 45
    INT           shift, and go to state 46
    CHAR          shift, and go to state 47
    FLOAT         shift, and go to state 48
    ID            shift, and go to state 51
    LP            shift, and go to state 52
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55

    Exp  go to state 120


State 92

   50 Exp: Exp GE . Exp

    ERROR_LEXEME  shift, and go to state 45
    INT           shift, and go to state 46
    CHAR          shift, and go to state 47
    FLOAT         shift, and go to state 48
    ID            shift, and go to state 51
    LP            shift, and go to state 52
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55

    Exp  go to state 121


State 93

   52 Exp: Exp EQ . Exp

    ERROR_LEXEME  shift, and go to state 45
    INT           shift, and go to state 46
    CHAR          shift, and go to state 47
    FLOAT         shift, and go to state 48
    ID            shift, and go to state 51
    LP            shift, and go to state 52
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55

    Exp  go to state 122


State 94

   42 Dec: VarDec ASSIGN Exp .
   43 Exp: Exp . ASSIGN Exp
   44    | Exp . ERROR_LEXEME Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . LT Exp
   48    | Exp . LE Exp
   49    | Exp . GT Exp
   50    | Exp . GE Exp
   51    | Exp . NE Exp
   52    | Exp . EQ Exp
   53    | Exp . PLUS Exp
   54    | Exp . MINUS Exp
   55    | Exp . MUL Exp
   56    | Exp . DIV Exp
   65    | Exp . LB Exp RB
   66    | Exp . DOT ID

    ERROR_LEXEME  shift, and go to state 77
    DOT           shift, and go to state 78
    ASSIGN        shift, and go to state 79
    LB            shift, and go to state 81
    PLUS          shift, and go to state 82
    MUL           shift, and go to state 83
    MINUS         shift, and go to state 84
    DIV           shift, and go to state 85
    OR            shift, and go to state 86
    AND           shift, and go to state 87
    NE            shift, and go to state 88
    LT            shift, and go to state 89
    LE            shift, and go to state 90
    GT            shift, and go to state 91
    GE            shift, and go to state 92
    EQ            shift, and go to state 93

    $default  reduce using rule 42 (Dec)


State 95

   40 DecList: Dec COMMA DecList .

    $default  reduce using rule 40 (DecList)


State 96

   34 Stmt: WHILE LP Exp . RP Stmt
   43 Exp: Exp . ASSIGN Exp
   44    | Exp . ERROR_LEXEME Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . LT Exp
   48    | Exp . LE Exp
   49    | Exp . GT Exp
   50    | Exp . GE Exp
   51    | Exp . NE Exp
   52    | Exp . EQ Exp
   53    | Exp . PLUS Exp
   54    | Exp . MINUS Exp
   55    | Exp . MUL Exp
   56    | Exp . DIV Exp
   65    | Exp . LB Exp RB
   66    | Exp . DOT ID

    ERROR_LEXEME  shift, and go to state 77
    DOT           shift, and go to state 78
    ASSIGN        shift, and go to state 79
    RP            shift, and go to state 123
    LB            shift, and go to state 81
    PLUS          shift, and go to state 82
    MUL           shift, and go to state 83
    MINUS         shift, and go to state 84
    DIV           shift, and go to state 85
    OR            shift, and go to state 86
    AND           shift, and go to state 87
    NE            shift, and go to state 88
    LT            shift, and go to state 89
    LE            shift, and go to state 90
    GT            shift, and go to state 91
    GE            shift, and go to state 92
    EQ            shift, and go to state 93


State 97

   32 Stmt: IF LP Exp . RP Stmt
   33     | IF LP Exp . RP Stmt ELSE Stmt
   43 Exp: Exp . ASSIGN Exp
   44    | Exp . ERROR_LEXEME Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . LT Exp
   48    | Exp . LE Exp
   49    | Exp . GT Exp
   50    | Exp . GE Exp
   51    | Exp . NE Exp
   52    | Exp . EQ Exp
   53    | Exp . PLUS Exp
   54    | Exp . MINUS Exp
   55    | Exp . MUL Exp
   56    | Exp . DIV Exp
   65    | Exp . LB Exp RB
   66    | Exp . DOT ID

    ERROR_LEXEME  shift, and go to state 77
    DOT           shift, and go to state 78
    ASSIGN        shift, and go to state 79
    RP            shift, and go to state 124
    LB            shift, and go to state 81
    PLUS          shift, and go to state 82
    MUL           shift, and go to state 83
    MINUS         shift, and go to state 84
    DIV           shift, and go to state 85
    OR            shift, and go to state 86
    AND           shift, and go to state 87
    NE            shift, and go to state 88
    LT            shift, and go to state 89
    LE            shift, and go to state 90
    GT            shift, and go to state 91
    GE            shift, and go to state 92
    EQ            shift, and go to state 93


State 98

   63 Exp: ID LP error .

    $default  reduce using rule 63 (Exp)


State 99

   64 Exp: ID LP RP .

    $default  reduce using rule 64 (Exp)


State 100

   43 Exp: Exp . ASSIGN Exp
   44    | Exp . ERROR_LEXEME Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . LT Exp
   48    | Exp . LE Exp
   49    | Exp . GT Exp
   50    | Exp . GE Exp
   51    | Exp . NE Exp
   52    | Exp . EQ Exp
   53    | Exp . PLUS Exp
   54    | Exp . MINUS Exp
   55    | Exp . MUL Exp
   56    | Exp . DIV Exp
   65    | Exp . LB Exp RB
   66    | Exp . DOT ID
   72 Args: Exp . COMMA Args
   73     | Exp .

    ERROR_LEXEME  shift, and go to state 77
    DOT           shift, and go to state 78
    COMMA         shift, and go to state 125
    ASSIGN        shift, and go to state 79
    LB            shift, and go to state 81
    PLUS          shift, and go to state 82
    MUL           shift, and go to state 83
    MINUS         shift, and go to state 84
    DIV           shift, and go to state 85
    OR            shift, and go to state 86
    AND           shift, and go to state 87
    NE            shift, and go to state 88
    LT            shift, and go to state 89
    LE            shift, and go to state 90
    GT            shift, and go to state 91
    GE            shift, and go to state 92
    EQ            shift, and go to state 93

    $default  reduce using rule 73 (Args)


State 101

   61 Exp: ID LP Args . error
   62    | ID LP Args . RP

    error  shift, and go to state 126
    RP     shift, and go to state 127


State 102

   57 Exp: LP Exp RP .

    $default  reduce using rule 57 (Exp)


State 103

   29 Stmt: RETURN SEMI error .

    $default  reduce using rule 29 (Stmt)


State 104

   30 Stmt: RETURN Exp error .

    $default  reduce using rule 30 (Stmt)


State 105

   31 Stmt: RETURN Exp SEMI .

    $default  reduce using rule 31 (Stmt)


State 106

   23 CompSt: LC DefList StmtList DefList error .

    $default  reduce using rule 23 (CompSt)


State 107

   43 Exp: Exp . ASSIGN Exp
   44    | Exp . ERROR_LEXEME Exp
   44    | Exp ERROR_LEXEME Exp .
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . LT Exp
   48    | Exp . LE Exp
   49    | Exp . GT Exp
   50    | Exp . GE Exp
   51    | Exp . NE Exp
   52    | Exp . EQ Exp
   53    | Exp . PLUS Exp
   54    | Exp . MINUS Exp
   55    | Exp . MUL Exp
   56    | Exp . DIV Exp
   65    | Exp . LB Exp RB
   66    | Exp . DOT ID

    ERROR_LEXEME  shift, and go to state 77
    DOT           shift, and go to state 78
    ASSIGN        shift, and go to state 79
    LB            shift, and go to state 81
    PLUS          shift, and go to state 82
    MUL           shift, and go to state 83
    MINUS         shift, and go to state 84
    DIV           shift, and go to state 85
    OR            shift, and go to state 86
    AND           shift, and go to state 87
    NE            shift, and go to state 88
    LT            shift, and go to state 89
    LE            shift, and go to state 90
    GT            shift, and go to state 91
    GE            shift, and go to state 92
    EQ            shift, and go to state 93

    ERROR_LEXEME  [reduce using rule 44 (Exp)]
    DOT           [reduce using rule 44 (Exp)]
    ASSIGN        [reduce using rule 44 (Exp)]
    LB            [reduce using rule 44 (Exp)]
    PLUS          [reduce using rule 44 (Exp)]
    MUL           [reduce using rule 44 (Exp)]
    MINUS         [reduce using rule 44 (Exp)]
    DIV           [reduce using rule 44 (Exp)]
    OR            [reduce using rule 44 (Exp)]
    AND           [reduce using rule 44 (Exp)]
    NE            [reduce using rule 44 (Exp)]
    LT            [reduce using rule 44 (Exp)]
    LE            [reduce using rule 44 (Exp)]
    GT            [reduce using rule 44 (Exp)]
    GE            [reduce using rule 44 (Exp)]
    EQ            [reduce using rule 44 (Exp)]
    $default      reduce using rule 44 (Exp)


State 108

   66 Exp: Exp DOT ID .

    $default  reduce using rule 66 (Exp)


State 109

   43 Exp: Exp . ASSIGN Exp
   43    | Exp ASSIGN Exp .
   44    | Exp . ERROR_LEXEME Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . LT Exp
   48    | Exp . LE Exp
   49    | Exp . GT Exp
   50    | Exp . GE Exp
   51    | Exp . NE Exp
   52    | Exp . EQ Exp
   53    | Exp . PLUS Exp
   54    | Exp . MINUS Exp
   55    | Exp . MUL Exp
   56    | Exp . DIV Exp
   65    | Exp . LB Exp RB
   66    | Exp . DOT ID

    ERROR_LEXEME  shift, and go to state 77
    DOT           shift, and go to state 78
    ASSIGN        shift, and go to state 79
    LB            shift, and go to state 81
    PLUS          shift, and go to state 82
    MUL           shift, and go to state 83
    MINUS         shift, and go to state 84
    DIV           shift, and go to state 85
    OR            shift, and go to state 86
    AND           shift, and go to state 87
    NE            shift, and go to state 88
    LT            shift, and go to state 89
    LE            shift, and go to state 90
    GT            shift, and go to state 91
    GE            shift, and go to state 92
    EQ            shift, and go to state 93

    ERROR_LEXEME  [reduce using rule 43 (Exp)]
    DOT           [reduce using rule 43 (Exp)]
    ASSIGN        [reduce using rule 43 (Exp)]
    LB            [reduce using rule 43 (Exp)]
    PLUS          [reduce using rule 43 (Exp)]
    MUL           [reduce using rule 43 (Exp)]
    MINUS         [reduce using rule 43 (Exp)]
    DIV           [reduce using rule 43 (Exp)]
    OR            [reduce using rule 43 (Exp)]
    AND           [reduce using rule 43 (Exp)]
    NE            [reduce using rule 43 (Exp)]
    LT            [reduce using rule 43 (Exp)]
    LE            [reduce using rule 43 (Exp)]
    GT            [reduce using rule 43 (Exp)]
    GE            [reduce using rule 43 (Exp)]
    EQ            [reduce using rule 43 (Exp)]
    $default      reduce using rule 43 (Exp)


State 110

   43 Exp: Exp . ASSIGN Exp
   44    | Exp . ERROR_LEXEME Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . LT Exp
   48    | Exp . LE Exp
   49    | Exp . GT Exp
   50    | Exp . GE Exp
   51    | Exp . NE Exp
   52    | Exp . EQ Exp
   53    | Exp . PLUS Exp
   54    | Exp . MINUS Exp
   55    | Exp . MUL Exp
   56    | Exp . DIV Exp
   65    | Exp . LB Exp RB
   65    | Exp LB Exp . RB
   66    | Exp . DOT ID

    ERROR_LEXEME  shift, and go to state 77
    DOT           shift, and go to state 78
    ASSIGN        shift, and go to state 79
    LB            shift, and go to state 81
    RB            shift, and go to state 128
    PLUS          shift, and go to state 82
    MUL           shift, and go to state 83
    MINUS         shift, and go to state 84
    DIV           shift, and go to state 85
    OR            shift, and go to state 86
    AND           shift, and go to state 87
    NE            shift, and go to state 88
    LT            shift, and go to state 89
    LE            shift, and go to state 90
    GT            shift, and go to state 91
    GE            shift, and go to state 92
    EQ            shift, and go to state 93


State 111

   43 Exp: Exp . ASSIGN Exp
   44    | Exp . ERROR_LEXEME Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . LT Exp
   48    | Exp . LE Exp
   49    | Exp . GT Exp
   50    | Exp . GE Exp
   51    | Exp . NE Exp
   52    | Exp . EQ Exp
   53    | Exp . PLUS Exp
   53    | Exp PLUS Exp .
   54    | Exp . MINUS Exp
   55    | Exp . MUL Exp
   56    | Exp . DIV Exp
   65    | Exp . LB Exp RB
   66    | Exp . DOT ID

    ERROR_LEXEME  shift, and go to state 77
    DOT           shift, and go to state 78
    ASSIGN        shift, and go to state 79
    LB            shift, and go to state 81
    MUL           shift, and go to state 83
    DIV           shift, and go to state 85
    OR            shift, and go to state 86
    AND           shift, and go to state 87
    NE            shift, and go to state 88
    LT            shift, and go to state 89
    LE            shift, and go to state 90
    GT            shift, and go to state 91
    GE            shift, and go to state 92
    EQ            shift, and go to state 93

    ERROR_LEXEME  [reduce using rule 53 (Exp)]
    DOT           [reduce using rule 53 (Exp)]
    ASSIGN        [reduce using rule 53 (Exp)]
    LB            [reduce using rule 53 (Exp)]
    OR            [reduce using rule 53 (Exp)]
    AND           [reduce using rule 53 (Exp)]
    NE            [reduce using rule 53 (Exp)]
    LT            [reduce using rule 53 (Exp)]
    LE            [reduce using rule 53 (Exp)]
    GT            [reduce using rule 53 (Exp)]
    GE            [reduce using rule 53 (Exp)]
    EQ            [reduce using rule 53 (Exp)]
    $default      reduce using rule 53 (Exp)


State 112

   43 Exp: Exp . ASSIGN Exp
   44    | Exp . ERROR_LEXEME Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . LT Exp
   48    | Exp . LE Exp
   49    | Exp . GT Exp
   50    | Exp . GE Exp
   51    | Exp . NE Exp
   52    | Exp . EQ Exp
   53    | Exp . PLUS Exp
   54    | Exp . MINUS Exp
   55    | Exp . MUL Exp
   55    | Exp MUL Exp .
   56    | Exp . DIV Exp
   65    | Exp . LB Exp RB
   66    | Exp . DOT ID

    ERROR_LEXEME  shift, and go to state 77
    DOT           shift, and go to state 78
    ASSIGN        shift, and go to state 79
    LB            shift, and go to state 81
    OR            shift, and go to state 86
    AND           shift, and go to state 87
    NE            shift, and go to state 88
    LT            shift, and go to state 89
    LE            shift, and go to state 90
    GT            shift, and go to state 91
    GE            shift, and go to state 92
    EQ            shift, and go to state 93

    ERROR_LEXEME  [reduce using rule 55 (Exp)]
    DOT           [reduce using rule 55 (Exp)]
    ASSIGN        [reduce using rule 55 (Exp)]
    LB            [reduce using rule 55 (Exp)]
    OR            [reduce using rule 55 (Exp)]
    AND           [reduce using rule 55 (Exp)]
    NE            [reduce using rule 55 (Exp)]
    LT            [reduce using rule 55 (Exp)]
    LE            [reduce using rule 55 (Exp)]
    GT            [reduce using rule 55 (Exp)]
    GE            [reduce using rule 55 (Exp)]
    EQ            [reduce using rule 55 (Exp)]
    $default      reduce using rule 55 (Exp)


State 113

   43 Exp: Exp . ASSIGN Exp
   44    | Exp . ERROR_LEXEME Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . LT Exp
   48    | Exp . LE Exp
   49    | Exp . GT Exp
   50    | Exp . GE Exp
   51    | Exp . NE Exp
   52    | Exp . EQ Exp
   53    | Exp . PLUS Exp
   54    | Exp . MINUS Exp
   54    | Exp MINUS Exp .
   55    | Exp . MUL Exp
   56    | Exp . DIV Exp
   65    | Exp . LB Exp RB
   66    | Exp . DOT ID

    ERROR_LEXEME  shift, and go to state 77
    DOT           shift, and go to state 78
    ASSIGN        shift, and go to state 79
    LB            shift, and go to state 81
    MUL           shift, and go to state 83
    DIV           shift, and go to state 85
    OR            shift, and go to state 86
    AND           shift, and go to state 87
    NE            shift, and go to state 88
    LT            shift, and go to state 89
    LE            shift, and go to state 90
    GT            shift, and go to state 91
    GE            shift, and go to state 92
    EQ            shift, and go to state 93

    ERROR_LEXEME  [reduce using rule 54 (Exp)]
    DOT           [reduce using rule 54 (Exp)]
    ASSIGN        [reduce using rule 54 (Exp)]
    LB            [reduce using rule 54 (Exp)]
    OR            [reduce using rule 54 (Exp)]
    AND           [reduce using rule 54 (Exp)]
    NE            [reduce using rule 54 (Exp)]
    LT            [reduce using rule 54 (Exp)]
    LE            [reduce using rule 54 (Exp)]
    GT            [reduce using rule 54 (Exp)]
    GE            [reduce using rule 54 (Exp)]
    EQ            [reduce using rule 54 (Exp)]
    $default      reduce using rule 54 (Exp)


State 114

   43 Exp: Exp . ASSIGN Exp
   44    | Exp . ERROR_LEXEME Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . LT Exp
   48    | Exp . LE Exp
   49    | Exp . GT Exp
   50    | Exp . GE Exp
   51    | Exp . NE Exp
   52    | Exp . EQ Exp
   53    | Exp . PLUS Exp
   54    | Exp . MINUS Exp
   55    | Exp . MUL Exp
   56    | Exp . DIV Exp
   56    | Exp DIV Exp .
   65    | Exp . LB Exp RB
   66    | Exp . DOT ID

    ERROR_LEXEME  shift, and go to state 77
    DOT           shift, and go to state 78
    ASSIGN        shift, and go to state 79
    LB            shift, and go to state 81
    OR            shift, and go to state 86
    AND           shift, and go to state 87
    NE            shift, and go to state 88
    LT            shift, and go to state 89
    LE            shift, and go to state 90
    GT            shift, and go to state 91
    GE            shift, and go to state 92
    EQ            shift, and go to state 93

    ERROR_LEXEME  [reduce using rule 56 (Exp)]
    DOT           [reduce using rule 56 (Exp)]
    ASSIGN        [reduce using rule 56 (Exp)]
    LB            [reduce using rule 56 (Exp)]
    OR            [reduce using rule 56 (Exp)]
    AND           [reduce using rule 56 (Exp)]
    NE            [reduce using rule 56 (Exp)]
    LT            [reduce using rule 56 (Exp)]
    LE            [reduce using rule 56 (Exp)]
    GT            [reduce using rule 56 (Exp)]
    GE            [reduce using rule 56 (Exp)]
    EQ            [reduce using rule 56 (Exp)]
    $default      reduce using rule 56 (Exp)


State 115

   43 Exp: Exp . ASSIGN Exp
   44    | Exp . ERROR_LEXEME Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   46    | Exp OR Exp .
   47    | Exp . LT Exp
   48    | Exp . LE Exp
   49    | Exp . GT Exp
   50    | Exp . GE Exp
   51    | Exp . NE Exp
   52    | Exp . EQ Exp
   53    | Exp . PLUS Exp
   54    | Exp . MINUS Exp
   55    | Exp . MUL Exp
   56    | Exp . DIV Exp
   65    | Exp . LB Exp RB
   66    | Exp . DOT ID

    ERROR_LEXEME  shift, and go to state 77
    DOT           shift, and go to state 78
    ASSIGN        shift, and go to state 79
    LB            shift, and go to state 81
    PLUS          shift, and go to state 82
    MUL           shift, and go to state 83
    MINUS         shift, and go to state 84
    DIV           shift, and go to state 85
    OR            shift, and go to state 86
    AND           shift, and go to state 87
    NE            shift, and go to state 88
    LT            shift, and go to state 89
    LE            shift, and go to state 90
    GT            shift, and go to state 91
    GE            shift, and go to state 92
    EQ            shift, and go to state 93

    ERROR_LEXEME  [reduce using rule 46 (Exp)]
    DOT           [reduce using rule 46 (Exp)]
    ASSIGN        [reduce using rule 46 (Exp)]
    LB            [reduce using rule 46 (Exp)]
    PLUS          [reduce using rule 46 (Exp)]
    MUL           [reduce using rule 46 (Exp)]
    MINUS         [reduce using rule 46 (Exp)]
    DIV           [reduce using rule 46 (Exp)]
    OR            [reduce using rule 46 (Exp)]
    AND           [reduce using rule 46 (Exp)]
    NE            [reduce using rule 46 (Exp)]
    LT            [reduce using rule 46 (Exp)]
    LE            [reduce using rule 46 (Exp)]
    GT            [reduce using rule 46 (Exp)]
    GE            [reduce using rule 46 (Exp)]
    EQ            [reduce using rule 46 (Exp)]
    $default      reduce using rule 46 (Exp)


State 116

   43 Exp: Exp . ASSIGN Exp
   44    | Exp . ERROR_LEXEME Exp
   45    | Exp . AND Exp
   45    | Exp AND Exp .
   46    | Exp . OR Exp
   47    | Exp . LT Exp
   48    | Exp . LE Exp
   49    | Exp . GT Exp
   50    | Exp . GE Exp
   51    | Exp . NE Exp
   52    | Exp . EQ Exp
   53    | Exp . PLUS Exp
   54    | Exp . MINUS Exp
   55    | Exp . MUL Exp
   56    | Exp . DIV Exp
   65    | Exp . LB Exp RB
   66    | Exp . DOT ID

    ERROR_LEXEME  shift, and go to state 77
    DOT           shift, and go to state 78
    ASSIGN        shift, and go to state 79
    LB            shift, and go to state 81
    PLUS          shift, and go to state 82
    MUL           shift, and go to state 83
    MINUS         shift, and go to state 84
    DIV           shift, and go to state 85
    OR            shift, and go to state 86
    AND           shift, and go to state 87
    NE            shift, and go to state 88
    LT            shift, and go to state 89
    LE            shift, and go to state 90
    GT            shift, and go to state 91
    GE            shift, and go to state 92
    EQ            shift, and go to state 93

    ERROR_LEXEME  [reduce using rule 45 (Exp)]
    DOT           [reduce using rule 45 (Exp)]
    ASSIGN        [reduce using rule 45 (Exp)]
    LB            [reduce using rule 45 (Exp)]
    PLUS          [reduce using rule 45 (Exp)]
    MUL           [reduce using rule 45 (Exp)]
    MINUS         [reduce using rule 45 (Exp)]
    DIV           [reduce using rule 45 (Exp)]
    OR            [reduce using rule 45 (Exp)]
    AND           [reduce using rule 45 (Exp)]
    NE            [reduce using rule 45 (Exp)]
    LT            [reduce using rule 45 (Exp)]
    LE            [reduce using rule 45 (Exp)]
    GT            [reduce using rule 45 (Exp)]
    GE            [reduce using rule 45 (Exp)]
    EQ            [reduce using rule 45 (Exp)]
    $default      reduce using rule 45 (Exp)


State 117

   43 Exp: Exp . ASSIGN Exp
   44    | Exp . ERROR_LEXEME Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . LT Exp
   48    | Exp . LE Exp
   49    | Exp . GT Exp
   50    | Exp . GE Exp
   51    | Exp . NE Exp
   51    | Exp NE Exp .
   52    | Exp . EQ Exp
   53    | Exp . PLUS Exp
   54    | Exp . MINUS Exp
   55    | Exp . MUL Exp
   56    | Exp . DIV Exp
   65    | Exp . LB Exp RB
   66    | Exp . DOT ID

    ERROR_LEXEME  shift, and go to state 77
    DOT           shift, and go to state 78
    ASSIGN        shift, and go to state 79
    LB            shift, and go to state 81
    PLUS          shift, and go to state 82
    MUL           shift, and go to state 83
    MINUS         shift, and go to state 84
    DIV           shift, and go to state 85
    OR            shift, and go to state 86
    AND           shift, and go to state 87
    NE            shift, and go to state 88
    LT            shift, and go to state 89
    LE            shift, and go to state 90
    GT            shift, and go to state 91
    GE            shift, and go to state 92
    EQ            shift, and go to state 93

    ERROR_LEXEME  [reduce using rule 51 (Exp)]
    DOT           [reduce using rule 51 (Exp)]
    ASSIGN        [reduce using rule 51 (Exp)]
    LB            [reduce using rule 51 (Exp)]
    PLUS          [reduce using rule 51 (Exp)]
    MUL           [reduce using rule 51 (Exp)]
    MINUS         [reduce using rule 51 (Exp)]
    DIV           [reduce using rule 51 (Exp)]
    OR            [reduce using rule 51 (Exp)]
    AND           [reduce using rule 51 (Exp)]
    NE            [reduce using rule 51 (Exp)]
    LT            [reduce using rule 51 (Exp)]
    LE            [reduce using rule 51 (Exp)]
    GT            [reduce using rule 51 (Exp)]
    GE            [reduce using rule 51 (Exp)]
    EQ            [reduce using rule 51 (Exp)]
    $default      reduce using rule 51 (Exp)


State 118

   43 Exp: Exp . ASSIGN Exp
   44    | Exp . ERROR_LEXEME Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . LT Exp
   47    | Exp LT Exp .
   48    | Exp . LE Exp
   49    | Exp . GT Exp
   50    | Exp . GE Exp
   51    | Exp . NE Exp
   52    | Exp . EQ Exp
   53    | Exp . PLUS Exp
   54    | Exp . MINUS Exp
   55    | Exp . MUL Exp
   56    | Exp . DIV Exp
   65    | Exp . LB Exp RB
   66    | Exp . DOT ID

    ERROR_LEXEME  shift, and go to state 77
    DOT           shift, and go to state 78
    ASSIGN        shift, and go to state 79
    LB            shift, and go to state 81
    PLUS          shift, and go to state 82
    MUL           shift, and go to state 83
    MINUS         shift, and go to state 84
    DIV           shift, and go to state 85
    OR            shift, and go to state 86
    AND           shift, and go to state 87
    NE            shift, and go to state 88
    LT            shift, and go to state 89
    LE            shift, and go to state 90
    GT            shift, and go to state 91
    GE            shift, and go to state 92
    EQ            shift, and go to state 93

    ERROR_LEXEME  [reduce using rule 47 (Exp)]
    DOT           [reduce using rule 47 (Exp)]
    ASSIGN        [reduce using rule 47 (Exp)]
    LB            [reduce using rule 47 (Exp)]
    PLUS          [reduce using rule 47 (Exp)]
    MUL           [reduce using rule 47 (Exp)]
    MINUS         [reduce using rule 47 (Exp)]
    DIV           [reduce using rule 47 (Exp)]
    OR            [reduce using rule 47 (Exp)]
    AND           [reduce using rule 47 (Exp)]
    NE            [reduce using rule 47 (Exp)]
    LT            [reduce using rule 47 (Exp)]
    LE            [reduce using rule 47 (Exp)]
    GT            [reduce using rule 47 (Exp)]
    GE            [reduce using rule 47 (Exp)]
    EQ            [reduce using rule 47 (Exp)]
    $default      reduce using rule 47 (Exp)


State 119

   43 Exp: Exp . ASSIGN Exp
   44    | Exp . ERROR_LEXEME Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . LT Exp
   48    | Exp . LE Exp
   48    | Exp LE Exp .
   49    | Exp . GT Exp
   50    | Exp . GE Exp
   51    | Exp . NE Exp
   52    | Exp . EQ Exp
   53    | Exp . PLUS Exp
   54    | Exp . MINUS Exp
   55    | Exp . MUL Exp
   56    | Exp . DIV Exp
   65    | Exp . LB Exp RB
   66    | Exp . DOT ID

    ERROR_LEXEME  shift, and go to state 77
    DOT           shift, and go to state 78
    ASSIGN        shift, and go to state 79
    LB            shift, and go to state 81
    PLUS          shift, and go to state 82
    MUL           shift, and go to state 83
    MINUS         shift, and go to state 84
    DIV           shift, and go to state 85
    OR            shift, and go to state 86
    AND           shift, and go to state 87
    NE            shift, and go to state 88
    LT            shift, and go to state 89
    LE            shift, and go to state 90
    GT            shift, and go to state 91
    GE            shift, and go to state 92
    EQ            shift, and go to state 93

    ERROR_LEXEME  [reduce using rule 48 (Exp)]
    DOT           [reduce using rule 48 (Exp)]
    ASSIGN        [reduce using rule 48 (Exp)]
    LB            [reduce using rule 48 (Exp)]
    PLUS          [reduce using rule 48 (Exp)]
    MUL           [reduce using rule 48 (Exp)]
    MINUS         [reduce using rule 48 (Exp)]
    DIV           [reduce using rule 48 (Exp)]
    OR            [reduce using rule 48 (Exp)]
    AND           [reduce using rule 48 (Exp)]
    NE            [reduce using rule 48 (Exp)]
    LT            [reduce using rule 48 (Exp)]
    LE            [reduce using rule 48 (Exp)]
    GT            [reduce using rule 48 (Exp)]
    GE            [reduce using rule 48 (Exp)]
    EQ            [reduce using rule 48 (Exp)]
    $default      reduce using rule 48 (Exp)


State 120

   43 Exp: Exp . ASSIGN Exp
   44    | Exp . ERROR_LEXEME Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . LT Exp
   48    | Exp . LE Exp
   49    | Exp . GT Exp
   49    | Exp GT Exp .
   50    | Exp . GE Exp
   51    | Exp . NE Exp
   52    | Exp . EQ Exp
   53    | Exp . PLUS Exp
   54    | Exp . MINUS Exp
   55    | Exp . MUL Exp
   56    | Exp . DIV Exp
   65    | Exp . LB Exp RB
   66    | Exp . DOT ID

    ERROR_LEXEME  shift, and go to state 77
    DOT           shift, and go to state 78
    ASSIGN        shift, and go to state 79
    LB            shift, and go to state 81
    PLUS          shift, and go to state 82
    MUL           shift, and go to state 83
    MINUS         shift, and go to state 84
    DIV           shift, and go to state 85
    OR            shift, and go to state 86
    AND           shift, and go to state 87
    NE            shift, and go to state 88
    LT            shift, and go to state 89
    LE            shift, and go to state 90
    GT            shift, and go to state 91
    GE            shift, and go to state 92
    EQ            shift, and go to state 93

    ERROR_LEXEME  [reduce using rule 49 (Exp)]
    DOT           [reduce using rule 49 (Exp)]
    ASSIGN        [reduce using rule 49 (Exp)]
    LB            [reduce using rule 49 (Exp)]
    PLUS          [reduce using rule 49 (Exp)]
    MUL           [reduce using rule 49 (Exp)]
    MINUS         [reduce using rule 49 (Exp)]
    DIV           [reduce using rule 49 (Exp)]
    OR            [reduce using rule 49 (Exp)]
    AND           [reduce using rule 49 (Exp)]
    NE            [reduce using rule 49 (Exp)]
    LT            [reduce using rule 49 (Exp)]
    LE            [reduce using rule 49 (Exp)]
    GT            [reduce using rule 49 (Exp)]
    GE            [reduce using rule 49 (Exp)]
    EQ            [reduce using rule 49 (Exp)]
    $default      reduce using rule 49 (Exp)


State 121

   43 Exp: Exp . ASSIGN Exp
   44    | Exp . ERROR_LEXEME Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . LT Exp
   48    | Exp . LE Exp
   49    | Exp . GT Exp
   50    | Exp . GE Exp
   50    | Exp GE Exp .
   51    | Exp . NE Exp
   52    | Exp . EQ Exp
   53    | Exp . PLUS Exp
   54    | Exp . MINUS Exp
   55    | Exp . MUL Exp
   56    | Exp . DIV Exp
   65    | Exp . LB Exp RB
   66    | Exp . DOT ID

    ERROR_LEXEME  shift, and go to state 77
    DOT           shift, and go to state 78
    ASSIGN        shift, and go to state 79
    LB            shift, and go to state 81
    PLUS          shift, and go to state 82
    MUL           shift, and go to state 83
    MINUS         shift, and go to state 84
    DIV           shift, and go to state 85
    OR            shift, and go to state 86
    AND           shift, and go to state 87
    NE            shift, and go to state 88
    LT            shift, and go to state 89
    LE            shift, and go to state 90
    GT            shift, and go to state 91
    GE            shift, and go to state 92
    EQ            shift, and go to state 93

    ERROR_LEXEME  [reduce using rule 50 (Exp)]
    DOT           [reduce using rule 50 (Exp)]
    ASSIGN        [reduce using rule 50 (Exp)]
    LB            [reduce using rule 50 (Exp)]
    PLUS          [reduce using rule 50 (Exp)]
    MUL           [reduce using rule 50 (Exp)]
    MINUS         [reduce using rule 50 (Exp)]
    DIV           [reduce using rule 50 (Exp)]
    OR            [reduce using rule 50 (Exp)]
    AND           [reduce using rule 50 (Exp)]
    NE            [reduce using rule 50 (Exp)]
    LT            [reduce using rule 50 (Exp)]
    LE            [reduce using rule 50 (Exp)]
    GT            [reduce using rule 50 (Exp)]
    GE            [reduce using rule 50 (Exp)]
    EQ            [reduce using rule 50 (Exp)]
    $default      reduce using rule 50 (Exp)


State 122

   43 Exp: Exp . ASSIGN Exp
   44    | Exp . ERROR_LEXEME Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . LT Exp
   48    | Exp . LE Exp
   49    | Exp . GT Exp
   50    | Exp . GE Exp
   51    | Exp . NE Exp
   52    | Exp . EQ Exp
   52    | Exp EQ Exp .
   53    | Exp . PLUS Exp
   54    | Exp . MINUS Exp
   55    | Exp . MUL Exp
   56    | Exp . DIV Exp
   65    | Exp . LB Exp RB
   66    | Exp . DOT ID

    ERROR_LEXEME  shift, and go to state 77
    DOT           shift, and go to state 78
    ASSIGN        shift, and go to state 79
    LB            shift, and go to state 81
    PLUS          shift, and go to state 82
    MUL           shift, and go to state 83
    MINUS         shift, and go to state 84
    DIV           shift, and go to state 85
    OR            shift, and go to state 86
    AND           shift, and go to state 87
    NE            shift, and go to state 88
    LT            shift, and go to state 89
    LE            shift, and go to state 90
    GT            shift, and go to state 91
    GE            shift, and go to state 92
    EQ            shift, and go to state 93

    ERROR_LEXEME  [reduce using rule 52 (Exp)]
    DOT           [reduce using rule 52 (Exp)]
    ASSIGN        [reduce using rule 52 (Exp)]
    LB            [reduce using rule 52 (Exp)]
    PLUS          [reduce using rule 52 (Exp)]
    MUL           [reduce using rule 52 (Exp)]
    MINUS         [reduce using rule 52 (Exp)]
    DIV           [reduce using rule 52 (Exp)]
    OR            [reduce using rule 52 (Exp)]
    AND           [reduce using rule 52 (Exp)]
    NE            [reduce using rule 52 (Exp)]
    LT            [reduce using rule 52 (Exp)]
    LE            [reduce using rule 52 (Exp)]
    GT            [reduce using rule 52 (Exp)]
    GE            [reduce using rule 52 (Exp)]
    EQ            [reduce using rule 52 (Exp)]
    $default      reduce using rule 52 (Exp)


State 123

   34 Stmt: WHILE LP Exp RP . Stmt

    ERROR_LEXEME  shift, and go to state 45
    INT           shift, and go to state 46
    CHAR          shift, and go to state 47
    FLOAT         shift, and go to state 48
    WHILE         shift, and go to state 49
    IF            shift, and go to state 50
    ID            shift, and go to state 51
    LP            shift, and go to state 52
    LC            shift, and go to state 21
    RETURN        shift, and go to state 53
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55

    CompSt  go to state 56
    Stmt    go to state 129
    Exp     go to state 59


State 124

   32 Stmt: IF LP Exp RP . Stmt
   33     | IF LP Exp RP . Stmt ELSE Stmt

    ERROR_LEXEME  shift, and go to state 45
    INT           shift, and go to state 46
    CHAR          shift, and go to state 47
    FLOAT         shift, and go to state 48
    WHILE         shift, and go to state 49
    IF            shift, and go to state 50
    ID            shift, and go to state 51
    LP            shift, and go to state 52
    LC            shift, and go to state 21
    RETURN        shift, and go to state 53
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55

    CompSt  go to state 56
    Stmt    go to state 130
    Exp     go to state 59


State 125

   72 Args: Exp COMMA . Args

    ERROR_LEXEME  shift, and go to state 45
    INT           shift, and go to state 46
    CHAR          shift, and go to state 47
    FLOAT         shift, and go to state 48
    ID            shift, and go to state 51
    LP            shift, and go to state 52
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55

    Exp   go to state 100
    Args  go to state 131


State 126

   61 Exp: ID LP Args error .

    $default  reduce using rule 61 (Exp)


State 127

   62 Exp: ID LP Args RP .

    $default  reduce using rule 62 (Exp)


State 128

   65 Exp: Exp LB Exp RB .

    $default  reduce using rule 65 (Exp)


State 129

   34 Stmt: WHILE LP Exp RP Stmt .

    $default  reduce using rule 34 (Stmt)


State 130

   32 Stmt: IF LP Exp RP Stmt .
   33     | IF LP Exp RP Stmt . ELSE Stmt

    ELSE  shift, and go to state 132

    ELSE      [reduce using rule 32 (Stmt)]
    $default  reduce using rule 32 (Stmt)


State 131

   72 Args: Exp COMMA Args .

    $default  reduce using rule 72 (Args)


State 132

   33 Stmt: IF LP Exp RP Stmt ELSE . Stmt

    ERROR_LEXEME  shift, and go to state 45
    INT           shift, and go to state 46
    CHAR          shift, and go to state 47
    FLOAT         shift, and go to state 48
    WHILE         shift, and go to state 49
    IF            shift, and go to state 50
    ID            shift, and go to state 51
    LP            shift, and go to state 52
    LC            shift, and go to state 21
    RETURN        shift, and go to state 53
    MINUS         shift, and go to state 54
    NOT           shift, and go to state 55

    CompSt  go to state 56
    Stmt    go to state 133
    Exp     go to state 59


State 133

   33 Stmt: IF LP Exp RP Stmt ELSE Stmt .

    $default  reduce using rule 33 (Stmt)
